{
  "version": 3,
  "sources": ["../src/main.ts"],
  "sourcesContent": ["/*\r\n * Created with @iobroker/create-adapter v2.6.5\r\n */\r\n\r\n// The adapter-core module gives you access to the core ioBroker functions\r\n// you need to create an adapter\r\nimport * as utils from '@iobroker/adapter-core';\r\n\r\nimport type { MqttMessageEvent, MqttEvent } from './lib/mqtt-events';\r\nimport { MqttServer } from './lib/mqttServer';\r\nimport { HoymilesMqtt } from './lib/hoymilesMqtt';\r\nimport { checkOnlineStatus } from './lib/states';\r\n\r\nclass HoymilesMs extends utils.Adapter {\r\n    private mqtt: any;\r\n    private hoymilesMqtt: HoymilesMqtt | null = null;\r\n    private onlineInterval: ioBroker.Interval | undefined;\r\n\r\n    public constructor(options: Partial<utils.AdapterOptions> = {}) {\r\n        super({\r\n            ...options,\r\n            name: 'hoymiles-ms',\r\n        });\r\n        this.on('ready', this.onReady.bind(this));\r\n        this.on('stateChange', this.onStateChange.bind(this));\r\n        // this.on('message', this.onMessage.bind(this));\r\n        this.on('unload', this.onUnload.bind(this));\r\n    }\r\n\r\n    /**\r\n     * Is called when databases are connected and adapter received configuration.\r\n     */\r\n    private async onReady(): Promise<void> {\r\n        // Reset the connection indicator during startup\r\n        await this.setState('info.connection', false, true);\r\n\r\n        await utils.I18n.init(`${__dirname}/..`, this);\r\n\r\n        // init hoymileMqtt\r\n        this.hoymilesMqtt = new HoymilesMqtt(this);\r\n\r\n        // init mqttServer\r\n        this.mqtt = new MqttServer(this, { port: 1883 }, this.mqttEventCallback.bind(this));\r\n        // this.mqtt.on('connect', this.onMqttConnect.bind(this));\r\n        // this.mqtt.on('message', this.onMqttMessage.bind(this));\r\n        await this.mqtt.start();\r\n        this.log.info('[MQTT-Server] started');\r\n\r\n        this.onlineInterval = this.setInterval(checkOnlineStatus.bind(this), 15 * 1000, this);\r\n    }\r\n\r\n    /**\r\n     * Is called when adapter shuts down - callback has to be called under any circumstances!\r\n     *\r\n     * @param callback standard iobroker callback\r\n     */\r\n    private onUnload(callback: () => void): void {\r\n        try {\r\n            this.onlineInterval && this.clearInterval(this.onlineInterval);\r\n\r\n            callback();\r\n        } catch {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    private async mqttEventCallback(name: string, event: MqttEvent): Promise<void> {\r\n        if (name === 'connect') {\r\n            this.log.info(`[MQTT] client ${event.clientId} connected from ${event.ip}`);\r\n        } else if (name === 'message') {\r\n            await this.hoymilesMqtt?.onMqttMessage(event as MqttMessageEvent);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * onStateChange is called if a subscribed state changes\r\n     *\r\n     * @param id id of state\r\n     * @param state state details\r\n     */\r\n    private onStateChange(id: string, state: ioBroker.State | null | undefined): void {\r\n        if (state) {\r\n            // The state was changed\r\n            this.log.info(`state ${id} changed: ${state.val} (ack = ${state.ack})`);\r\n        } else {\r\n            // The state was deleted\r\n            this.log.info(`state ${id} deleted`);\r\n        }\r\n    }\r\n}\r\n\r\nif (require.main !== module) {\r\n    // Export the constructor in compact mode\r\n    module.exports = (options: Partial<utils.AdapterOptions> | undefined) => new HoymilesMs(options);\r\n} else {\r\n    // otherwise start the instance directly\r\n    (() => new HoymilesMs())();\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAMA,YAAuB;AAGvB,wBAA2B;AAC3B,0BAA6B;AAC7B,oBAAkC;AAElC,MAAM,mBAAmB,MAAM,QAAQ;AAAA,EAC3B;AAAA,EACA,eAAoC;AAAA,EACpC;AAAA,EAED,YAAY,UAAyC,CAAC,GAAG;AAC5D,UAAM;AAAA,MACF,GAAG;AAAA,MACH,MAAM;AAAA,IACV,CAAC;AACD,SAAK,GAAG,SAAS,KAAK,QAAQ,KAAK,IAAI,CAAC;AACxC,SAAK,GAAG,eAAe,KAAK,cAAc,KAAK,IAAI,CAAC;AAEpD,SAAK,GAAG,UAAU,KAAK,SAAS,KAAK,IAAI,CAAC;AAAA,EAC9C;AAAA;AAAA;AAAA;AAAA,EAKA,MAAc,UAAyB;AAEnC,UAAM,KAAK,SAAS,mBAAmB,OAAO,IAAI;AAElD,UAAM,MAAM,KAAK,KAAK,GAAG,SAAS,OAAO,IAAI;AAG7C,SAAK,eAAe,IAAI,iCAAa,IAAI;AAGzC,SAAK,OAAO,IAAI,6BAAW,MAAM,EAAE,MAAM,KAAK,GAAG,KAAK,kBAAkB,KAAK,IAAI,CAAC;AAGlF,UAAM,KAAK,KAAK,MAAM;AACtB,SAAK,IAAI,KAAK,uBAAuB;AAErC,SAAK,iBAAiB,KAAK,YAAY,gCAAkB,KAAK,IAAI,GAAG,KAAK,KAAM,IAAI;AAAA,EACxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOQ,SAAS,UAA4B;AACzC,QAAI;AACA,WAAK,kBAAkB,KAAK,cAAc,KAAK,cAAc;AAE7D,eAAS;AAAA,IACb,QAAQ;AACJ,eAAS;AAAA,IACb;AAAA,EACJ;AAAA,EAEA,MAAc,kBAAkB,MAAc,OAAiC;AAlEnF;AAmEQ,QAAI,SAAS,WAAW;AACpB,WAAK,IAAI,KAAK,iBAAiB,MAAM,QAAQ,mBAAmB,MAAM,EAAE,EAAE;AAAA,IAC9E,WAAW,SAAS,WAAW;AAC3B,cAAM,UAAK,iBAAL,mBAAmB,cAAc;AAAA,IAC3C;AAAA,EACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAQQ,cAAc,IAAY,OAAgD;AAC9E,QAAI,OAAO;AAEP,WAAK,IAAI,KAAK,SAAS,EAAE,aAAa,MAAM,GAAG,WAAW,MAAM,GAAG,GAAG;AAAA,IAC1E,OAAO;AAEH,WAAK,IAAI,KAAK,SAAS,EAAE,UAAU;AAAA,IACvC;AAAA,EACJ;AACJ;AAEA,IAAI,QAAQ,SAAS,QAAQ;AAEzB,SAAO,UAAU,CAAC,YAAuD,IAAI,WAAW,OAAO;AACnG,OAAO;AAEH,GAAC,MAAM,IAAI,WAAW,GAAG;AAC7B;",
  "names": []
}
