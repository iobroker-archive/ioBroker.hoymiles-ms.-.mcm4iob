{
  "version": 3,
  "sources": ["../../src/lib/states.ts"],
  "sourcesContent": ["import * as utils from '@iobroker/adapter-core';\n\ntype ChannelConfig = {\n    [key: string]: {\n        common: ioBroker.ObjectCommon;\n    };\n};\n\ntype FolderConfig = {\n    [key: string]: {\n        common: ioBroker.ObjectCommon;\n    };\n};\n\ntype StateConfig = {\n    [key: string]: {\n        mqtt: {\n            mqtt_publish: string;\n            mqtt_publish_funct: any;\n        };\n        common: ioBroker.StateCommon;\n    };\n};\n\ntype GridObj = {\n    type: string;\n    v: number;\n    i: number;\n    f: number;\n    p: number;\n    q:  number;\n    ein:  number;\n    eout:  number;\n    etin: number;\n    etout: number;\n};\n\nconst channelConfig: ChannelConfig = {\n    device: {\n        common: {\n            name: {\n                en: 'Device',\n                de: 'Ger\u00E4t',\n                ru: '\u0423\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u043E',\n                pt: 'Dispositivo',\n                nl: 'Apparaat',\n                fr: 'Appareil',\n                it: 'Dispositivo',\n                es: 'Dispositivo',\n                pl: 'Urz\u0105dzenie',\n                uk: '\u041F\u0440\u0438\u0441\u0442\u0440\u0456\u0439',\n                'zh-cn': '\u8BBE\u5907',\n            },\n        },\n    },\n\n    'device.grid_on': {\n        common: {\n            name: '',\n        },\n    },\n\n    'device.grid_off': {\n        common: {\n            name: '',\n        },\n    },\n\n    'device.inv': {\n        common: {\n            name: '',\n        },\n    },\n\n    power_ctrl: {\n        common: {\n            name: {\n                en: 'Power-control',\n                de: 'Leistungsregelung',\n                ru: '\u0423\u043F\u0440\u0430\u0432\u043B\u0435\u043D\u0438\u0435 \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C\u044E',\n                pt: 'Controle de pot\u00EAncia',\n                nl: 'Vermogensregeling',\n                fr: 'Contr\u00F4le de puissance',\n                it: 'Controllo di potenza',\n                es: 'Control de potencia',\n                pl: 'Kontrola mocy',\n                uk: '\u041A\u043E\u043D\u0442\u0440\u043E\u043B\u044C \u0436\u0438\u0432\u043B\u0435\u043D\u043D\u044F',\n                'zh-cn': '\u529F\u7387\u63A7\u5236',\n            },\n        },\n    },\n\n    realtime: {\n        common: {\n            name: {\n                en: 'Realtime Data',\n                de: 'Echtzeitdaten',\n                ru: '\u0414\u0430\u043D\u043D\u044B\u0435 \u0432 \u0440\u0435\u0430\u043B\u044C\u043D\u043E\u043C \u0432\u0440\u0435\u043C\u0435\u043D\u0438',\n                pt: 'Dados em tempo real',\n                nl: 'Realtime gegevens',\n                fr: 'Donn\u00E9es en temps r\u00E9el',\n                it: 'Dati in tempo reale',\n                es: 'Datos en tiempo real',\n                pl: 'Dane w czasie rzeczywistym',\n                uk: '\u0414\u0430\u043D\u0456 \u0432 \u0440\u0435\u0430\u043B\u044C\u043D\u043E\u043C\u0443 \u0447\u0430\u0441\u0456',\n                'zh-cn': '\u5B9E\u65F6\u6570\u636E',\n            },\n        },\n    },\n\n    system: {\n        common: {\n            name: {\n                en: 'System Data',\n                de: 'Systemdaten',\n                ru: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u044B\u0435 \u0434\u0430\u043D\u043D\u044B\u0435',\n                pt: 'Dados do sistema',\n                nl: 'Systeemgegevens',\n                fr: 'Donn\u00E9es syst\u00E8me',\n                it: 'Dati di sistema',\n                es: 'Datos del sistema',\n                pl: 'Dane systemowe',\n                uk: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u0456 \u0434\u0430\u043D\u0456',\n                'zh-cn': '\u7CFB\u7EDF\u6570\u636E',\n            },\n        },\n    },\n};\n\nconst folderConfig: FolderConfig = {\n    info: {\n        common: {\n            name: {\n                en: 'Status Information',\n                de: 'Statusinformationen',\n                ru: '\u0418\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0438\u044F \u043E \u0441\u0442\u0430\u0442\u0443\u0441\u0435',\n                pt: 'Informa\u00E7\u00F5es de status',\n                nl: 'Statusinformatie',\n                fr: 'Informations sur le statut',\n                it: 'Informazioni sullo stato',\n                es: 'Informaci\u00F3n de estado',\n                pl: 'Informacje o statusie',\n                uk: '\u0406\u043D\u0444\u043E\u0440\u043C\u0430\u0446\u0456\u044F \u043F\u0440\u043E \u0441\u0442\u0430\u0442\u0443\u0441',\n                'zh-cn': '\u72B6\u6001\u4FE1\u606F',\n            },\n        },\n    },\n};\n\nexport const stateConfig: StateConfig = {\n    'device.grid_off.ein': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.ein,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_off.eout': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.eout,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_off.etin': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.etin,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_off.etout': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.etout,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_off.i': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.i,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.current',\n            read: true,\n            write: false,\n            unit: 'A',\n        },\n    },\n\n    'device.grid_off.f': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.f,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.frequency',\n            read: true,\n            write: false,\n            unit: 'Hz',\n        },\n    },\n\n    'device.grid_off.p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.p,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.power.active',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'device.grid_off.q': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.q,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.power.reactive',\n            read: true,\n            write: false,\n            unit: 'Var',\n        },\n    },\n\n    'device.grid_off.v': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_off')[0]?.v,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.voltage',\n            read: true,\n            write: false,\n            unit: 'V',\n        },\n    },\n\n    'device.grid_on.ein': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.ein,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_on.eout': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.eout,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_on.etin': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.etin,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_on.etout': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.etout,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.grid_on.i': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.i,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.current',\n            read: true,\n            write: false,\n            unit: 'A',\n        },\n    },\n\n    'device.grid_on.f': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.f,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.frequency',\n            read: true,\n            write: false,\n            unit: 'Hz',\n        },\n    },\n\n    'device.grid_on.p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.p,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.power.active',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'device.grid_on.q': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.q,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.power.reactive',\n            read: true,\n            write: false,\n            unit: 'Var',\n        },\n    },\n\n    'device.grid_on.v': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'grid_on')[0]?.v,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.voltage',\n            read: true,\n            write: false,\n            unit: 'V',\n        },\n    },\n\n    'device.identifiers': {\n        mqtt: {\n            mqtt_publish: `homeassistant/switch/<dev_id>/config`,\n            mqtt_publish_funct: (value: string): any => JSON.stringify(JSON.parse(value).device?.identifiers),\n        },\n        common: {\n            name: {\n                en: 'Device Identifiers',\n                de: 'Ger\u00E4tekennungen',\n                ru: '\u0418\u0434\u0435\u043D\u0442\u0438\u0444\u0438\u043A\u0430\u0442\u043E\u0440\u044B \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432',\n                pt: 'Identificadores de dispositivos',\n                nl: \"Apparaat-ID's\",\n                fr: 'Identifiants de p\u00E9riph\u00E9rique',\n                it: 'Identificatori del dispositivo',\n                es: 'Identificadores de dispositivos',\n                pl: 'Identyfikatory urz\u0105dze\u0144',\n                uk: '\u0406\u0434\u0435\u043D\u0442\u0438\u0444\u0456\u043A\u0430\u0442\u043E\u0440\u0438 \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u0457\u0432',\n                'zh-cn': '\u8BBE\u5907\u6807\u8BC6\u7B26',\n            },\n            type: 'array',\n            role: 'list',\n            read: true,\n            write: false,\n        },\n    },\n\n    'device.inv.ein': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.ein,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.inv.eout': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.eout,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.inv.etin': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.etin,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.inv.etout': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.etout,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'device.inv.i': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.i,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.current',\n            read: true,\n            write: false,\n            unit: 'A',\n        },\n    },\n\n    'device.inv.p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.p,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.power.active',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'device.inv.q': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.q,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.power.reactive',\n            read: true,\n            write: false,\n            unit: 'Var',\n        },\n    },\n\n    'device.inv.v': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/device/state`,\n            mqtt_publish_funct: (value: string): any =>\n                JSON.parse(value).grid?.filter((obj: GridObj) => obj.type === 'inv')[0]?.v,\n        },\n        common: {\n            name: '',\n            type: 'number',\n            role: 'value.voltage',\n            read: true,\n            write: false,\n            unit: 'V',\n        },\n    },\n\n    'device.manufacturer': {\n        mqtt: {\n            mqtt_publish: `homeassistant/switch/<dev_id>/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).device?.manufacturer,\n        },\n        common: {\n            name: {\n                en: 'Device Manufacturer',\n                de: 'Ger\u00E4tehersteller',\n                ru: '\u041F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0438\u0442\u0435\u043B\u044C \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                pt: 'Fabricante do dispositivo',\n                nl: 'Fabrikant van het apparaat',\n                fr: \"Fabricant de l'appareil\",\n                it: 'Produttore del dispositivo',\n                es: 'Fabricante del dispositivo',\n                pl: 'Producent urz\u0105dzenia',\n                uk: '\u0412\u0438\u0440\u043E\u0431\u043D\u0438\u043A \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n                'zh-cn': '\u8BBE\u5907\u5236\u9020\u5546',\n            },\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n    },\n\n    'device.model': {\n        mqtt: {\n            mqtt_publish: `homeassistant/switch/<dev_id>/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).device?.model,\n        },\n        common: {\n            name: {\n                en: 'Device Model',\n                de: 'Ger\u00E4temodell',\n                ru: '\u041C\u043E\u0434\u0435\u043B\u044C \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                pt: 'Modelo do dispositivo',\n                nl: 'Apparaatmodel',\n                fr: \"Mod\u00E8le d'appareil\",\n                it: 'Modello del dispositivo',\n                es: 'Modelo del dispositivo',\n                pl: 'Model urz\u0105dzenia',\n                uk: '\u041C\u043E\u0434\u0435\u043B\u044C \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n                'zh-cn': '\u8BBE\u5907\u578B\u53F7',\n            },\n            type: 'string',\n            role: 'info.model',\n            read: true,\n            write: false,\n        },\n    },\n\n    'device.name': {\n        mqtt: {\n            mqtt_publish: `homeassistant/switch/<dev_id>/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).device?.name,\n        },\n        common: {\n            name: {\n                en: 'Device Name',\n                de: 'Ger\u00E4tename',\n                ru: '\u0418\u043C\u044F \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                pt: 'Nome do dispositivo',\n                nl: 'Apparaatnaam',\n                fr: \"Nom de l'appareil\",\n                it: 'Nome del dispositivo',\n                es: 'Nombre del dispositivo',\n                pl: 'Nazwa urz\u0105dzenia',\n                uk: '\u041D\u0430\u0437\u0432\u0430 \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n                'zh-cn': '\u8BBE\u5907\u540D\u79F0',\n            },\n            type: 'string',\n            role: 'info.name',\n            read: true,\n            write: false,\n        },\n    },\n\n    'device.sw_version': {\n        mqtt: {\n            mqtt_publish: `homeassistant/switch/<dev_id>/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).device?.sw_version,\n        },\n        common: {\n            name: {\n                en: 'Softwareversion',\n                de: 'Softwareversion',\n                ru: '\u0412\u0435\u0440\u0441\u0438\u044F \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043C\u043D\u043E\u0433\u043E \u043E\u0431\u0435\u0441\u043F\u0435\u0447\u0435\u043D\u0438\u044F',\n                pt: 'Vers\u00E3o do software',\n                nl: 'Softwareversie',\n                fr: 'Version du logiciel',\n                it: 'Versione software',\n                es: 'Versi\u00F3n del software',\n                pl: 'Wersja oprogramowania',\n                uk: '\u0412\u0435\u0440\u0441\u0456\u044F \u043F\u0440\u043E\u0433\u0440\u0430\u043C\u043D\u043E\u0433\u043E \u0437\u0430\u0431\u0435\u0437\u043F\u0435\u0447\u0435\u043D\u043D\u044F',\n                'zh-cn': '\u8F6F\u4EF6\u7248\u672C',\n            },\n            type: 'string',\n            role: 'info.firmware',\n            read: true,\n            write: false,\n        },\n    },\n\n    'power_ctrl.min': {\n        mqtt: {\n            mqtt_publish: `homeassistant/number/<dev_id>/power_ctrl/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).min,\n        },\n        common: {\n            name: {\n                en: 'Maximum Input Power',\n                de: 'Maximale Eingangsleistung',\n                ru: '\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0432\u0445\u043E\u0434\u043D\u0430\u044F \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C',\n                pt: 'Pot\u00EAncia m\u00E1xima de entrada',\n                nl: 'Maximaal ingangsvermogen',\n                fr: \"Puissance d'entr\u00E9e maximale\",\n                it: 'Potenza massima in ingresso',\n                es: 'Potencia m\u00E1xima de entrada',\n                pl: 'Maksymalna moc wej\u015Bciowa',\n                uk: '\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0430 \u0432\u0445\u0456\u0434\u043D\u0430 \u043F\u043E\u0442\u0443\u0436\u043D\u0456\u0441\u0442\u044C',\n                'zh-cn': '\u6700\u5927\u8F93\u5165\u529F\u7387',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'power_ctrl.max': {\n        mqtt: {\n            mqtt_publish: `homeassistant/number/<dev_id>/power_ctrl/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).max,\n        },\n        common: {\n            name: {\n                en: 'Maximum Output Power',\n                de: 'Maximale Ausgangsleistung',\n                ru: '\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0430\u044F \u0432\u044B\u0445\u043E\u0434\u043D\u0430\u044F \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C',\n                pt: 'Pot\u00EAncia m\u00E1xima de sa\u00EDda',\n                nl: 'Maximaal uitgangsvermogen',\n                fr: 'Puissance de sortie maximale',\n                it: 'Potenza massima in uscita',\n                es: 'Potencia m\u00E1xima de salida',\n                pl: 'Maksymalna moc wyj\u015Bciowa',\n                uk: '\u041C\u0430\u043A\u0441\u0438\u043C\u0430\u043B\u044C\u043D\u0430 \u0432\u0438\u0445\u0456\u0434\u043D\u0430 \u043F\u043E\u0442\u0443\u0436\u043D\u0456\u0441\u0442\u044C',\n                'zh-cn': '\u6700\u5927\u8F93\u51FA\u529F\u7387',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'power_ctrl.step': {\n        mqtt: {\n            mqtt_publish: `homeassistant/number/<dev_id>/power_ctrl/config`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).step,\n        },\n        common: {\n            name: {\n                en: 'Power Stepsize',\n                de: 'Leistungsschrittweite',\n                ru: '\u041C\u043E\u0449\u043D\u043E\u0441\u0442\u044C Stepsize',\n                pt: 'Tamanho do passo de pot\u00EAncia',\n                nl: 'Vermogen Stapgrootte',\n                fr: 'Pas de puissance',\n                it: 'Gradino di potenza',\n                es: 'Tama\u00F1o del paso de potencia',\n                pl: 'Wielko\u015B\u0107 kroku mocy',\n                uk: '\u0420\u043E\u0437\u043C\u0456\u0440 \u043A\u0440\u043E\u043A\u0443 \u043F\u043E\u0442\u0443\u0436\u043D\u043E\u0441\u0442\u0456',\n                'zh-cn': '\u529F\u7387\u6B65\u957F',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.bat_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).bat_p,\n        },\n        common: {\n            name: {\n                en: 'Device Battery Power',\n                de: 'Akkuleistung des Ger\u00E4ts',\n                ru: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                pt: 'Energia da bateria do dispositivo',\n                nl: 'Batterijvermogen van het apparaat',\n                fr: \"Puissance de la batterie de l'appareil\",\n                it: 'Potenza della batteria del dispositivo',\n                es: 'Energ\u00EDa de la bater\u00EDa del dispositivo',\n                pl: 'Moc baterii urz\u0105dzenia',\n                uk: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0457 \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n                'zh-cn': '\u8BBE\u5907\u7535\u6C60\u7535\u91CF',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.bat_sts': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).bat_sts,\n        },\n        common: {\n            name: {\n                en: 'Device Battery Status',\n                de: 'Batteriestatus des Ger\u00E4ts',\n                ru: '\u0421\u043E\u0441\u0442\u043E\u044F\u043D\u0438\u0435 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 \u0443\u0441\u0442\u0440\u043E\u0439\u0441\u0442\u0432\u0430',\n                pt: 'Status da bateria do dispositivo',\n                nl: 'Batterijstatus van het apparaat',\n                fr: \"\u00C9tat de la batterie de l'appareil\",\n                it: 'Stato della batteria del dispositivo',\n                es: 'Estado de la bater\u00EDa del dispositivo',\n                pl: 'Stan baterii urz\u0105dzenia',\n                uk: '\u0421\u0442\u0430\u043D \u0431\u0430\u0442\u0430\u0440\u0435\u0457 \u043F\u0440\u0438\u0441\u0442\u0440\u043E\u044E',\n                'zh-cn': '\u8BBE\u5907\u7535\u6C60\u72B6\u6001',\n            },\n            type: 'string',\n            role: 'text',\n            read: true,\n            write: false,\n        },\n    },\n\n    'realtime.grid_on_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).grid_on_p,\n        },\n        common: {\n            name: {\n                en: 'Active Power to Grid',\n                de: 'Wirkleistung zum Netz',\n                ru: '\u0410\u043A\u0442\u0438\u0432\u043D\u0430\u044F \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C \u0432 \u0441\u0435\u0442\u044C',\n                pt: 'Energia Ativa para Rede',\n                nl: 'Actief vermogen TO-net',\n                fr: 'Puissance active vers le r\u00E9seau',\n                it: 'Potenza attiva alla rete',\n                es: 'Potencia activa a la red',\n                pl: 'Moc czynna do sieci',\n                uk: '\u0410\u043A\u0442\u0438\u0432\u043D\u0430 \u043F\u043E\u0442\u0443\u0436\u043D\u0456\u0441\u0442\u044C \u0434\u043B\u044F \u043C\u0435\u0440\u0435\u0436\u0456',\n                'zh-cn': '\u6709\u529F\u529F\u7387\u5E76\u7F51',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.grid_off_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).grid_off_p,\n        },\n        common: {\n            name: {\n                en: 'Active Power from Grid',\n                de: 'Wirkleistung aus dem Netz',\n                ru: '\u0410\u043A\u0442\u0438\u0432\u043D\u0430\u044F \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C \u0438\u0437 \u0441\u0435\u0442\u0438',\n                pt: 'Pot\u00EAncia Ativa da Rede',\n                nl: 'Actief vermogen van het net',\n                fr: 'Puissance active du r\u00E9seau',\n                it: 'Potenza attiva dalla rete',\n                es: 'Energ\u00EDa activa de la red',\n                pl: 'Moc czynna z sieci',\n                uk: '\u0410\u043A\u0442\u0438\u0432\u043D\u0430 \u043F\u043E\u0442\u0443\u0436\u043D\u0456\u0441\u0442\u044C \u0437 \u043C\u0435\u0440\u0435\u0436\u0456',\n                'zh-cn': '\u6765\u81EA\u7535\u7F51\u7684\u6709\u529F\u529F\u7387',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.soc': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).soc,\n        },\n        common: {\n            name: {\n                en: 'Battery SOC',\n                de: 'Batterie-Ladezustand',\n                ru: '\u0423\u0440\u043E\u0432\u0435\u043D\u044C \u0437\u0430\u0440\u044F\u0434\u0430 \u0431\u0430\u0442\u0430\u0440\u0435\u0438',\n                pt: 'SOC da bateria',\n                nl: 'Batterij SOC',\n                fr: 'SOC de la batterie',\n                it: 'SOC della batteria',\n                es: 'SOC de la bater\u00EDa',\n                pl: 'Stan baterii',\n                uk: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0457',\n                'zh-cn': '\u7535\u6C60SOC',\n            },\n            type: 'number',\n            role: 'value',\n            read: true,\n            write: false,\n            unit: '%',\n        },\n    },\n\n    'realtime.sys_bat_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_bat_p,\n        },\n        common: {\n            name: {\n                en: 'System Battery SOC',\n                de: 'Systemweiter Batterie-Ladezustand',\n                ru: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u0430\u044F \u0431\u0430\u0442\u0430\u0440\u0435\u044F SOC',\n                pt: 'SOC da bateria do sistema',\n                nl: 'Systeembatterij SOC',\n                fr: 'Syst\u00E8me de surveillance de la batterie',\n                it: 'SOC della batteria di sistema',\n                es: 'SOC de la bater\u00EDa del sistema',\n                pl: 'Stan akumulatora systemowego SOC',\n                uk: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0457 \u0441\u0438\u0441\u0442\u0435\u043C\u0438',\n                'zh-cn': '\u7CFB\u7EDF\u7535\u6C60SOC',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.sys_grid_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_grid_p,\n        },\n        common: {\n            name: {\n                en: 'System Grid Power',\n                de: 'Systemnetzstrom',\n                ru: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u0430\u044F \u0441\u0435\u0442\u043A\u0430 \u043F\u0438\u0442\u0430\u043D\u0438\u044F',\n                pt: 'Sistema de energia da rede el\u00E9trica',\n                nl: 'Systeemnetstroom',\n                fr: 'R\u00E9seau \u00E9lectrique du syst\u00E8me',\n                it: 'Sistema di alimentazione della rete',\n                es: 'Energ\u00EDa de la red del sistema',\n                pl: 'System zasilania sieciowego',\n                uk: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u0430 \u043C\u0435\u0440\u0435\u0436\u0430 \u0436\u0438\u0432\u043B\u0435\u043D\u043D\u044F',\n                'zh-cn': '\u7CFB\u7EDF\u7535\u7F51\u529F\u7387',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.sys_load_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_load_p,\n        },\n        common: {\n            name: {\n                en: 'System Load Power',\n                de: 'Systemlastleistung',\n                ru: '\u041C\u043E\u0449\u043D\u043E\u0441\u0442\u044C \u043D\u0430\u0433\u0440\u0443\u0437\u043A\u0438 \u0441\u0438\u0441\u0442\u0435\u043C\u044B',\n                pt: 'Pot\u00EAncia de carga do sistema',\n                nl: 'Systeembelastingvermogen',\n                fr: 'Puissance de charge du syst\u00E8me',\n                it: 'Potenza del carico del sistema',\n                es: 'Potencia de carga del sistema',\n                pl: 'Moc obci\u0105\u017Cenia systemu',\n                uk: '\u041F\u043E\u0442\u0443\u0436\u043D\u0456\u0441\u0442\u044C \u0441\u0438\u0441\u0442\u0435\u043C\u043D\u043E\u0433\u043E \u043D\u0430\u0432\u0430\u043D\u0442\u0430\u0436\u0435\u043D\u043D\u044F',\n                'zh-cn': '\u7CFB\u7EDF\u8D1F\u8F7D\u529F\u7387',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.sys_plug_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_plug_p,\n        },\n        common: {\n            name: {\n                en: 'System Socket Power',\n                de: 'Systemsteckdosen-Leistung',\n                ru: '\u041C\u043E\u0449\u043D\u043E\u0441\u0442\u044C \u0441\u0438\u0441\u0442\u0435\u043C\u043D\u043E\u0439 \u0440\u043E\u0437\u0435\u0442\u043A\u0438',\n                pt: 'Sistema de alimenta\u00E7\u00E3o de soquete',\n                nl: 'Systeem Socket Power',\n                fr: \"Prise d'alimentation du syst\u00E8me\",\n                it: 'Presa di alimentazione del sistema',\n                es: 'Alimentaci\u00F3n del z\u00F3calo del sistema',\n                pl: 'Gniazdo zasilania systemu',\n                uk: '\u0416\u0438\u0432\u043B\u0435\u043D\u043D\u044F \u0441\u0438\u0441\u0442\u0435\u043C\u043D\u043E\u0457 \u0440\u043E\u0437\u0435\u0442\u043A\u0438',\n                'zh-cn': '\u7CFB\u7EDF\u63D2\u5EA7\u7535\u6E90',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.sys_pv_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_pv_p,\n        },\n        common: {\n            name: {\n                en: 'System Photovoltaic Power',\n                de: 'Photovoltaikleistung',\n                ru: '\u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u0444\u043E\u0442\u043E\u044D\u043B\u0435\u043A\u0442\u0440\u0438\u0447\u0435\u0441\u043A\u043E\u0439 \u044D\u043D\u0435\u0440\u0433\u0438\u0438',\n                pt: 'Sistema de Energia Fotovoltaica',\n                nl: 'Systeem Fotovolta\u00EFsche Energie',\n                fr: \"Syst\u00E8me d'\u00E9nergie photovolta\u00EFque\",\n                it: 'Sistema di alimentazione fotovoltaica',\n                es: 'Sistema de energ\u00EDa fotovoltaica',\n                pl: 'System zasilania fotowoltaicznego',\n                uk: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u0430 \u0444\u043E\u0442\u043E\u0435\u043B\u0435\u043A\u0442\u0440\u0438\u0447\u043D\u0430 \u0435\u043D\u0435\u0440\u0433\u0456\u044F',\n                'zh-cn': '\u7CFB\u7EDF\u5149\u4F0F\u53D1\u7535',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'realtime.sys_soc': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_soc,\n        },\n        common: {\n            name: {\n                en: 'System battery SOC',\n                de: 'Systembatterie-SOC',\n                ru: '\u0421\u0438\u0441\u0442\u0435\u043C\u043D\u0430\u044F \u0431\u0430\u0442\u0430\u0440\u0435\u044F SOC',\n                pt: 'Bateria do sistema SOC',\n                nl: 'Systeembatterij SOC',\n                fr: 'SOC de la batterie du syst\u00E8me',\n                it: 'SOC della batteria di sistema',\n                es: 'SOC de la bater\u00EDa del sistema',\n                pl: 'Stan baterii systemowej SOC',\n                uk: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0457 \u0441\u0438\u0441\u0442\u0435\u043C\u0438',\n                'zh-cn': '\u7CFB\u7EDF\u7535\u6C60SOC',\n            },\n            type: 'number',\n            role: 'value',\n            read: true,\n            write: false,\n            unit: '%',\n        },\n    },\n\n    'realtime.sys_sp_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/quick/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sys_sp_p,\n        },\n        common: {\n            name: {\n                en: 'System Smart Socket Power',\n                de: 'System Smart Socket Power',\n                ru: '\u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u0438\u043D\u0442\u0435\u043B\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u044B\u0445 \u0440\u043E\u0437\u0435\u0442\u043E\u043A Power',\n                pt: 'Sistema Smart Socket Power',\n                nl: 'Systeem Smart Socket Power',\n                fr: 'Syst\u00E8me Smart Socket Power',\n                it: 'Sistema di alimentazione Smart Socket',\n                es: 'Sistema de alimentaci\u00F3n de enchufe inteligente',\n                pl: 'System Smart Socket Power',\n                uk: '\u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u0440\u043E\u0437\u0443\u043C\u043D\u043E\u0433\u043E \u0436\u0438\u0432\u043B\u0435\u043D\u043D\u044F \u0440\u043E\u0437\u0435\u0442\u043A\u0438',\n                'zh-cn': '\u7CFB\u7EDF\u667A\u80FD\u63D2\u5EA7\u7535\u6E90',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'system.bat_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).bat_p,\n        },\n        common: {\n            name: {\n                en: 'Battery Power',\n                de: 'Batterieleistung',\n                ru: '\u041C\u043E\u0449\u043D\u043E\u0441\u0442\u044C \u0430\u043A\u043A\u0443\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430',\n                pt: 'Energia da bateria',\n                nl: 'Batterijvoeding',\n                fr: 'Alimentation par batterie',\n                it: 'Potenza della batteria',\n                es: 'Energ\u00EDa de la bater\u00EDa',\n                pl: 'Moc baterii',\n                uk: '\u0416\u0438\u0432\u043B\u0435\u043D\u043D\u044F \u0432\u0456\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0457',\n                'zh-cn': '\u7535\u6C60\u7535\u91CF',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'system.chg_e': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).chg_e,\n        },\n        common: {\n            name: {\n                en: 'Battery Charge (Today)\\n',\n                de: 'Batterieladung (heute)\\n',\n                ru: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 (\u0441\u0435\u0433\u043E\u0434\u043D\u044F)\\n',\n                pt: 'Carga da bateria (hoje)\\n',\n                nl: 'Batterijlading (vandaag)\\n',\n                fr: \"Charge de la batterie (aujourd'hui)\\n\",\n                it: 'Carica della batteria (oggi)\\n',\n                es: 'Carga de la bater\u00EDa (hoy)\\n',\n                pl: '\u0141adowanie baterii (dzisiaj)\\n',\n                uk: '\u0417\u0430\u0440\u044F\u0434 \u0430\u043A\u0443\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430 (\u0441\u044C\u043E\u0433\u043E\u0434\u043D\u0456)\\n',\n                'zh-cn': '\u7535\u6C60\u7535\u91CF\uFF08\u4ECA\u65E5\uFF09\\n',\n            },\n            type: 'number',\n            role: 'value.energy.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'system.dchg_e': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).dchg_e,\n        },\n        common: {\n            name: {\n                en: 'Battery Decharge (Today)\\n',\n                de: 'Batterieentladung (Heute)\\n',\n                ru: '\u0420\u0430\u0437\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0438 (\u0441\u0435\u0433\u043E\u0434\u043D\u044F)\\n',\n                pt: 'Descarga da bateria (hoje)\\n',\n                nl: 'Batterij ontladen (vandaag)\\n',\n                fr: \"D\u00E9charge de la batterie (aujourd'hui)\\n\",\n                it: 'Scarica della batteria (oggi)\\n',\n                es: 'Descarga de la bater\u00EDa (hoy)\\n',\n                pl: 'Roz\u0142adowanie akumulatora (dzisiaj)\\n',\n                uk: '\u0420\u043E\u0437\u0440\u044F\u0434\u043A\u0430 \u0430\u043A\u0443\u043C\u0443\u043B\u044F\u0442\u043E\u0440\u0430 (\u0441\u044C\u043E\u0433\u043E\u0434\u043D\u0456)\\n',\n                'zh-cn': '\u7535\u6C60\u653E\u7535\uFF08\u4ECA\u5929\uFF09\\n',\n            },\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'system.grid_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).grid_p,\n        },\n        common: {\n            name: {\n                en: 'Grid Power',\n                de: 'Netzleistung',\n                ru: '\u0421\u0435\u0442\u0435\u0432\u0430\u044F \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C',\n                pt: 'Energia da rede',\n                nl: 'Netstroom',\n                fr: 'R\u00E9seau \u00E9lectrique',\n                it: 'Potenza di rete',\n                es: 'Energ\u00EDa de red',\n                pl: 'Moc sieciowa',\n                uk: '\u0415\u043D\u0435\u0440\u0433\u0456\u044F \u043C\u0435\u0440\u0435\u0436\u0456',\n                'zh-cn': '\u7535\u7F51\u7535\u529B',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'system.ems_mode': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).ems_mode,\n        },\n        common: {\n            name: {\n                en: 'EMS Mode',\n                de: 'EMS-Modus',\n                ru: '\u0420\u0435\u0436\u0438\u043C EMS',\n                pt: 'Modo EMS',\n                nl: 'EMS-modus',\n                fr: 'Mode EMS',\n                it: 'Modalit\u00E0 EMS',\n                es: 'Modo EMS',\n                pl: 'Tryb EMS',\n                uk: '\u0420\u0435\u0436\u0438\u043C \u0435\u043A\u0441\u0442\u0440\u0435\u043D\u043E\u0457 \u043C\u0435\u0434\u0438\u0447\u043D\u043E\u0457 \u0434\u043E\u043F\u043E\u043C\u043E\u0433\u0438',\n                'zh-cn': 'EMS\u6A21\u5F0F',\n            },\n            type: 'string',\n            role: 'state',\n            read: true,\n            write: false,\n        },\n    },\n\n    'system.plug_in_e': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).plug_in_e,\n        },\n        common: {\n            name: {\n                en: 'Grid-Socket Input-Energy (Today)',\n                de: 'Netz-Steckdosen-Eingangsenergie (Heute)',\n                ru: '\u0412\u0445\u043E\u0434\u043D\u0430\u044F \u043C\u043E\u0449\u043D\u043E\u0441\u0442\u044C \u0441\u0435\u0442\u0438-\u0440\u043E\u0437\u0435\u0442\u043A\u0438 (\u0441\u0435\u0433\u043E\u0434\u043D\u044F)',\n                pt: 'Entrada de energia na rede el\u00E9trica (hoje)',\n                nl: 'Netstroom-ingangsenergie (vandaag)',\n                fr: \"\u00C9nergie d'entr\u00E9e du r\u00E9seau (aujourd'hui)\",\n                it: 'Energia in ingresso alla rete elettrica (oggi)',\n                es: 'Energ\u00EDa de entrada de la toma de red (hoy)',\n                pl: 'Wej\u015Bcie-energia sieciowa-gniazdkowa (dzisiaj)',\n                uk: '\u0412\u0445\u0456\u0434\u043D\u0430 \u0435\u043D\u0435\u0440\u0433\u0456\u044F \u0440\u043E\u0437\u0435\u0442\u043A\u0438 \u043C\u0435\u0440\u0435\u0436\u0456 (\u0441\u044C\u043E\u0433\u043E\u0434\u043D\u0456)',\n                'zh-cn': '\u7535\u7F51\u63D2\u5EA7\u8F93\u5165\u80FD\u91CF\uFF08\u4ECA\u65E5\uFF09',\n            },\n            type: 'number',\n            role: 'value.enery.consumed',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'system.plug_out_e': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).plug_out_e,\n        },\n        common: {\n            name: {\n                en: 'Grid-Socket Output-Energy (Today)',\n                de: 'Netz-Steckdosen-Ausgangsenergie (Heute)',\n                ru: '\u0412\u044B\u0445\u043E\u0434 \u044D\u043D\u0435\u0440\u0433\u0438\u0438 \u0438\u0437 \u0441\u0435\u0442\u0438 (\u0441\u0435\u0433\u043E\u0434\u043D\u044F)',\n                pt: 'Sa\u00EDda de energia da rede el\u00E9trica (hoje)',\n                nl: 'Netstroom-energie (vandaag)',\n                fr: \"\u00C9nergie de sortie du r\u00E9seau (aujourd'hui)\",\n                it: 'Energia in uscita dalla rete elettrica (oggi)',\n                es: 'Energ\u00EDa de salida de la toma de red (hoy)',\n                pl: 'Wyj\u015Bcie sieciowe-energia (obecnie)',\n                uk: '\u0412\u0438\u0445\u0456\u0434\u043D\u0430 \u0435\u043D\u0435\u0440\u0433\u0456\u044F \u0440\u043E\u0437\u0435\u0442\u043A\u0438 \u043C\u0435\u0440\u0435\u0436\u0456 (\u0441\u044C\u043E\u0433\u043E\u0434\u043D\u0456)',\n                'zh-cn': '\u7535\u7F51\u63D2\u5EA7\u8F93\u51FA\u80FD\u91CF\uFF08\u4ECA\u65E5\uFF09',\n            },\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'system.pv_e': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).pv_e,\n        },\n        common: {\n            name: {\n                en: 'Photovoltaic Energyproduction (Today)',\n                de: 'Photovoltaik-Energieerzeugung (heute)',\n                ru: '\u041F\u0440\u043E\u0438\u0437\u0432\u043E\u0434\u0441\u0442\u0432\u043E \u0444\u043E\u0442\u043E\u044D\u043B\u0435\u043A\u0442\u0440\u0438\u0447\u0435\u0441\u043A\u043E\u0439 \u044D\u043D\u0435\u0440\u0433\u0438\u0438 (\u0441\u0435\u0433\u043E\u0434\u043D\u044F)',\n                pt: 'Produ\u00E7\u00E3o de Energia Fotovoltaica (Hoje)',\n                nl: 'Fotovolta\u00EFsche energieproductie (vandaag)',\n                fr: \"Production d'\u00E9nergie photovolta\u00EFque (aujourd'hui)\",\n                it: 'Produzione di energia fotovoltaica (oggi)',\n                es: 'Producci\u00F3n de energ\u00EDa fotovoltaica (hoy)',\n                pl: 'Produkcja energii fotowoltaicznej (dzisiaj)',\n                uk: '\u0412\u0438\u0440\u043E\u0431\u043D\u0438\u0446\u0442\u0432\u043E \u0444\u043E\u0442\u043E\u0435\u043B\u0435\u043A\u0442\u0440\u0438\u0447\u043D\u043E\u0457 \u0435\u043D\u0435\u0440\u0433\u0456\u0457 (\u0441\u044C\u043E\u0433\u043E\u0434\u043D\u0456)',\n                'zh-cn': '\u5149\u4F0F\u53D1\u7535\uFF08\u4ECA\u5929\uFF09',\n            },\n            type: 'number',\n            role: 'value.energy.produced',\n            read: true,\n            write: false,\n            unit: 'Wh',\n        },\n    },\n\n    'system.pv_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).pv_p,\n        },\n        common: {\n            name: {\n                en: 'Photovoltaic Power',\n                de: 'Photovoltaik Leistung',\n                ru: '\u0424\u043E\u0442\u043E\u044D\u043B\u0435\u043A\u0442\u0440\u0438\u0447\u0435\u0441\u043A\u0430\u044F \u044D\u043D\u0435\u0440\u0433\u0438\u044F',\n                pt: 'Energia Fotovoltaica',\n                nl: 'Fotovolta\u00EFsche energie',\n                fr: '\u00C9nergie photovolta\u00EFque',\n                it: 'Energia fotovoltaica',\n                es: 'Energ\u00EDa fotovoltaica',\n                pl: 'Energia fotowoltaiczna',\n                uk: '\u0424\u043E\u0442\u043E\u0435\u043B\u0435\u043A\u0442\u0440\u0438\u0447\u043D\u0430 \u0435\u043D\u0435\u0440\u0433\u0456\u044F',\n                'zh-cn': '\u5149\u4F0F\u53D1\u7535',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n\n    'system.soc': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).soc,\n        },\n        common: {\n            name: {\n                en: 'Battery SOC',\n                de: 'Batterie-SOC',\n                ru: '\u0423\u0440\u043E\u0432\u0435\u043D\u044C \u0437\u0430\u0440\u044F\u0434\u0430 \u0431\u0430\u0442\u0430\u0440\u0435\u0438',\n                pt: 'SOC da bateria',\n                nl: 'Batterij SOC',\n                fr: 'SOC de la batterie',\n                it: 'SOC della batteria',\n                es: 'SOC de la bater\u00EDa',\n                pl: 'Stan baterii',\n                uk: '\u0417\u0430\u0440\u044F\u0434 \u0431\u0430\u0442\u0430\u0440\u0435\u0457',\n                'zh-cn': '\u7535\u6C60SOC',\n            },\n            type: 'number',\n            role: 'value',\n            read: true,\n            write: false,\n            unit: '%',\n        },\n    },\n\n    'system.sp_p': {\n        mqtt: {\n            mqtt_publish: `homeassistant/sensor/<dev_id>/system/state`,\n            mqtt_publish_funct: (value: string): any => JSON.parse(value).sp_p,\n        },\n        common: {\n            name: {\n                en: 'Smart-Socket Power',\n                de: 'Smart-Socket Leistung',\n                ru: '\u0423\u043C\u043D\u0430\u044F \u0440\u043E\u0437\u0435\u0442\u043A\u0430 Power',\n                pt: 'Energia Smart-Socket',\n                nl: 'Slimme stopcontactvoeding',\n                fr: 'Prise de courant intelligente',\n                it: 'Potenza della presa intelligente',\n                es: 'Alimentaci\u00F3n mediante enchufe inteligente',\n                pl: 'Smart-Socket Power',\n                uk: '\u0416\u0438\u0432\u043B\u0435\u043D\u043D\u044F \u0432\u0456\u0434 \u0441\u043C\u0430\u0440\u0442-\u0440\u043E\u0437\u0435\u0442\u043E\u043A',\n                'zh-cn': '\u667A\u80FD\u63D2\u5EA7\u7535\u6E90',\n            },\n            type: 'number',\n            role: 'value.power',\n            read: true,\n            write: false,\n            unit: 'W',\n        },\n    },\n};\n\nconst devIdCache: { [key: string]: string } = {};\n\n/**\n * remove invalid characters from devId\n *\n * @param devId device Id to filter\n */\nexport function filterDevId(devId: string): string {\n    return devId.replace(/[^a-zA-Z0-9-]/g, '_');\n}\n\n/**\n *\n */\nexport async function initStates(adapter: ioBroker.Adapter, dev_id: string): Promise<void> {\n    const deviceId = filterDevId(dev_id);\n    if (devIdCache[deviceId]) {\n        // nothing to do if already processed\n        return;\n    }\n\n    adapter.log.debug(`initializing states for device ${dev_id}`);\n\n    // create device object\n    await adapter.extendObject(\n        `${deviceId}`,\n        {\n            type: 'device',\n            common: {\n                name: deviceId,\n                // statusStates: {\n                //     onlineId: `${this.name}.${this.instance}.${deviceId}.info.online`,\n                // },\n            },\n            native: {},\n        },\n        { preserve: { common: ['name'] } },\n    );\n\n    for (const channelKey in channelConfig) {\n        const common = channelConfig[channelKey].common;\n        common.name = utils.I18n.getTranslatedObject(`${channelKey}_name`);\n        await adapter.extendObject(\n            `${deviceId}.${channelKey}`,\n            {\n                type: 'channel',\n                common: common,\n                native: {},\n            },\n            { preserve: { common: ['name'] } },\n        );\n    }\n\n    for (const folderKey in folderConfig) {\n        const common = folderConfig[folderKey].common;\n        common.name = utils.I18n.getTranslatedObject(`${folderKey}_name`);\n        await adapter.extendObject(\n            `${deviceId}.${folderKey}`,\n            {\n                type: 'folder',\n                common: common,\n                native: {},\n            },\n            { preserve: { common: ['name'] } },\n        );\n    }\n\n    for (const stateKey in stateConfig) {\n        const common = stateConfig[stateKey].common;\n        common.name = utils.I18n.getTranslatedObject(`${stateKey}_name`)\n        await adapter.extendObject(\n            `${deviceId}.${stateKey}`,\n            {\n                type: 'state',\n                common: common,\n                native: {},\n            },\n            { preserve: { common: ['name'] } },\n        );\n    }\n\n    devIdCache[deviceId] = 'X';\n    adapter.log.debug(`initialization of states for device ${dev_id} completed`);\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAuB;AAqCvB,MAAM,gBAA+B;AAAA,EACjC,QAAQ;AAAA,IACJ,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,kBAAkB;AAAA,IACd,QAAQ;AAAA,MACJ,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,mBAAmB;AAAA,IACf,QAAQ;AAAA,MACJ,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,cAAc;AAAA,IACV,QAAQ;AAAA,MACJ,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,YAAY;AAAA,IACR,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,UAAU;AAAA,IACN,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AAAA,EAEA,QAAQ;AAAA,IACJ,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AACJ;AAEA,MAAM,eAA6B;AAAA,EAC/B,MAAM;AAAA,IACF,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,IACJ;AAAA,EACJ;AACJ;AAEO,MAAM,cAA2B;AAAA,EACpC,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzJrD;AA0JgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,wBAAwB;AAAA,IACpB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzKrD;AA0KgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,wBAAwB;AAAA,IACpB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzLrD;AA0LgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,yBAAyB;AAAA,IACrB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzMrD;AA0MgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzNrD;AA0NgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzOrD;AA0OgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzPrD;AA0PgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzQrD;AA0QgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzRrD;AA0RgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,YAAY,OAA1E,mBAA8E;AAAA;AAAA,IACtF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,sBAAsB;AAAA,IAClB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzSrD;AA0SgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzTrD;AA0TgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzUrD;AA0UgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,wBAAwB;AAAA,IACpB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzVrD;AA0VgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzWrD;AA0WgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzXrD;AA0XgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzYrD;AA0YgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzZrD;AA0ZgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzarD;AA0agB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,WAAW,OAAzE,mBAA6E;AAAA;AAAA,IACrF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,sBAAsB;AAAA,IAClB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAzbrD;AAybwD,oBAAK,WAAU,UAAK,MAAM,KAAK,EAAE,WAAlB,mBAA0B,WAAW;AAAA;AAAA,IACpG;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,kBAAkB;AAAA,IACd,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAndrD;AAodgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,mBAAmB;AAAA,IACf,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAnerD;AAoegB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,mBAAmB;AAAA,IACf,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAnfrD;AAofgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAngBrD;AAogBgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAnhBrD;AAohBgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAniBrD;AAoiBgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAnjBrD;AAojBgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAnkBrD;AAokBgB,gCAAK,MAAM,KAAK,EAAE,SAAlB,mBAAwB,OAAO,CAAC,QAAiB,IAAI,SAAS,OAAO,OAArE,mBAAyE;AAAA;AAAA,IACjF;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAnlBrD;AAmlBwD,0BAAK,MAAM,KAAK,EAAE,WAAlB,mBAA0B;AAAA;AAAA,IAC1E;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AA7mBrD;AA6mBwD,0BAAK,MAAM,KAAK,EAAE,WAAlB,mBAA0B;AAAA;AAAA,IAC1E;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,eAAe;AAAA,IACX,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAvoBrD;AAuoBwD,0BAAK,MAAM,KAAK,EAAE,WAAlB,mBAA0B;AAAA;AAAA,IAC1E;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAoB;AAjqBrD;AAiqBwD,0BAAK,MAAM,KAAK,EAAE,WAAlB,mBAA0B;AAAA;AAAA,IAC1E;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,kBAAkB;AAAA,IACd,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,kBAAkB;AAAA,IACd,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,mBAAmB;AAAA,IACf,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,kBAAkB;AAAA,IACd,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,sBAAsB;AAAA,IAClB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,sBAAsB;AAAA,IAClB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,uBAAuB;AAAA,IACnB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,gBAAgB;AAAA,IACZ,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,iBAAiB;AAAA,IACb,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,iBAAiB;AAAA,IACb,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,mBAAmB;AAAA,IACf,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,IACX;AAAA,EACJ;AAAA,EAEA,oBAAoB;AAAA,IAChB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,qBAAqB;AAAA,IACjB,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,eAAe;AAAA,IACX,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,eAAe;AAAA,IACX,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,cAAc;AAAA,IACV,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AAAA,EAEA,eAAe;AAAA,IACX,MAAM;AAAA,MACF,cAAc;AAAA,MACd,oBAAoB,CAAC,UAAuB,KAAK,MAAM,KAAK,EAAE;AAAA,IAClE;AAAA,IACA,QAAQ;AAAA,MACJ,MAAM;AAAA,QACF,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,IAAI;AAAA,QACJ,SAAS;AAAA,MACb;AAAA,MACA,MAAM;AAAA,MACN,MAAM;AAAA,MACN,MAAM;AAAA,MACN,OAAO;AAAA,MACP,MAAM;AAAA,IACV;AAAA,EACJ;AACJ;AAEA,MAAM,aAAwC,CAAC;AAOxC,SAAS,YAAY,OAAuB;AAC/C,SAAO,MAAM,QAAQ,kBAAkB,GAAG;AAC9C;AAKA,eAAsB,WAAW,SAA2B,QAA+B;AACvF,QAAM,WAAW,YAAY,MAAM;AACnC,MAAI,WAAW,QAAQ,GAAG;AAEtB;AAAA,EACJ;AAEA,UAAQ,IAAI,MAAM,kCAAkC,MAAM,EAAE;AAG5D,QAAM,QAAQ;AAAA,IACV,GAAG,QAAQ;AAAA,IACX;AAAA,MACI,MAAM;AAAA,MACN,QAAQ;AAAA,QACJ,MAAM;AAAA;AAAA;AAAA;AAAA,MAIV;AAAA,MACA,QAAQ,CAAC;AAAA,IACb;AAAA,IACA,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,EAAE;AAAA,EACrC;AAEA,aAAW,cAAc,eAAe;AACpC,UAAM,SAAS,cAAc,UAAU,EAAE;AACzC,WAAO,OAAO,MAAM,KAAK,oBAAoB,GAAG,UAAU,OAAO;AACjE,UAAM,QAAQ;AAAA,MACV,GAAG,QAAQ,IAAI,UAAU;AAAA,MACzB;AAAA,QACI,MAAM;AAAA,QACN;AAAA,QACA,QAAQ,CAAC;AAAA,MACb;AAAA,MACA,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,EAAE;AAAA,IACrC;AAAA,EACJ;AAEA,aAAW,aAAa,cAAc;AAClC,UAAM,SAAS,aAAa,SAAS,EAAE;AACvC,WAAO,OAAO,MAAM,KAAK,oBAAoB,GAAG,SAAS,OAAO;AAChE,UAAM,QAAQ;AAAA,MACV,GAAG,QAAQ,IAAI,SAAS;AAAA,MACxB;AAAA,QACI,MAAM;AAAA,QACN;AAAA,QACA,QAAQ,CAAC;AAAA,MACb;AAAA,MACA,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,EAAE;AAAA,IACrC;AAAA,EACJ;AAEA,aAAW,YAAY,aAAa;AAChC,UAAM,SAAS,YAAY,QAAQ,EAAE;AACrC,WAAO,OAAO,MAAM,KAAK,oBAAoB,GAAG,QAAQ,OAAO;AAC/D,UAAM,QAAQ;AAAA,MACV,GAAG,QAAQ,IAAI,QAAQ;AAAA,MACvB;AAAA,QACI,MAAM;AAAA,QACN;AAAA,QACA,QAAQ,CAAC;AAAA,MACb;AAAA,MACA,EAAE,UAAU,EAAE,QAAQ,CAAC,MAAM,EAAE,EAAE;AAAA,IACrC;AAAA,EACJ;AAEA,aAAW,QAAQ,IAAI;AACvB,UAAQ,IAAI,MAAM,uCAAuC,MAAM,YAAY;AAE/E;",
  "names": []
}
