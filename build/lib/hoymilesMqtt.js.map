{
  "version": 3,
  "sources": ["../../src/lib/hoymilesMqtt.ts"],
  "sourcesContent": ["import { stateConfig, initStates, filterDevId, handleOnlineStatus } from './states';\r\n\r\nimport type { MqttMessageEvent } from './mqtt-events';\r\n\r\n/**\r\n * HoymilesMqtt - class to handle hoymiles mqtt topics within ioBroker\r\n *\r\n */\r\nexport class HoymilesMqtt {\r\n    private adapter: ioBroker.Adapter;\r\n    private log: ioBroker.Log;\r\n\r\n    /**\r\n     * class constructor\r\n     *\r\n     * @param adapter reference to ioBroker aapter class\r\n     */\r\n    constructor(adapter: ioBroker.Adapter) {\r\n        this.adapter = adapter;\r\n        this.log = adapter.log;\r\n        this.log.debug(`[hoymilesMqtt] initializing`);\r\n    }\r\n\r\n    public async onMqttMessage(event: MqttMessageEvent): Promise<void> {\r\n        this.log.debug(`[hoymilesMqtt] process message ${event.topic}: ${event.payload.toString()}`);\r\n\r\n        if (!event.topic) {\r\n            this.log.debug(`[hoymilesMqtt] ignoring empty topic`);\r\n            return;\r\n        }\r\n\r\n        const topicDetails = event.topic.split('/');\r\n        if (topicDetails.length < 2) {\r\n            this.log.debug(`[hoymilesMqtt] ignoring invalid topic ${event.topic}`);\r\n            return;\r\n        }\r\n        const deviceId = topicDetails[2];\r\n        topicDetails[2] = '<dev_id>';\r\n        const topic = topicDetails.join('/');\r\n\r\n        await initStates(this.adapter, deviceId);\r\n        await handleOnlineStatus(this.adapter, deviceId);\r\n\r\n        for (const stateKey in stateConfig) {\r\n            if (!stateConfig[stateKey].mqtt || stateConfig[stateKey].mqtt.mqtt_publish !== topic) {\r\n                continue;\r\n            }\r\n\r\n            const state = stateConfig[stateKey];\r\n\r\n            const stateId = `${filterDevId(deviceId)}.${stateKey}`;\r\n            const mqtt_publish_func = state.mqtt?.mqtt_publish_funct;\r\n            let value = mqtt_publish_func(event.payload);\r\n            if (state.common.type === 'boolean' && value === 'false') {\r\n                value = false;\r\n            }\r\n            if (state.common.type === 'boolean' && value === 'true') {\r\n                value = true;\r\n            }\r\n            if (state.common.type === 'number' && value !== undefined) {\r\n                value = Number(value);\r\n            }\r\n\r\n            if (value !== undefined) {\r\n                this.log.debug(`[hoymilesMqtt] updateing state ${stateId} from ${event.topic} using value ${value}`);\r\n                await this.adapter.setState(stateId, value, true);\r\n            } else {\r\n                this.log.warn(\r\n                    `[hoymilesMqtt] updateing state ${stateId} from ${event.topic} failed, value is undefined`,\r\n                );\r\n            }\r\n        }\r\n    }\r\n}\r\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAyE;AAQlE,MAAM,aAAa;AAAA,EACd;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOR,YAAY,SAA2B;AACnC,SAAK,UAAU;AACf,SAAK,MAAM,QAAQ;AACnB,SAAK,IAAI,MAAM,6BAA6B;AAAA,EAChD;AAAA,EAEA,MAAa,cAAc,OAAwC;AAvBvE;AAwBQ,SAAK,IAAI,MAAM,kCAAkC,MAAM,KAAK,KAAK,MAAM,QAAQ,SAAS,CAAC,EAAE;AAE3F,QAAI,CAAC,MAAM,OAAO;AACd,WAAK,IAAI,MAAM,qCAAqC;AACpD;AAAA,IACJ;AAEA,UAAM,eAAe,MAAM,MAAM,MAAM,GAAG;AAC1C,QAAI,aAAa,SAAS,GAAG;AACzB,WAAK,IAAI,MAAM,yCAAyC,MAAM,KAAK,EAAE;AACrE;AAAA,IACJ;AACA,UAAM,WAAW,aAAa,CAAC;AAC/B,iBAAa,CAAC,IAAI;AAClB,UAAM,QAAQ,aAAa,KAAK,GAAG;AAEnC,cAAM,0BAAW,KAAK,SAAS,QAAQ;AACvC,cAAM,kCAAmB,KAAK,SAAS,QAAQ;AAE/C,eAAW,YAAY,2BAAa;AAChC,UAAI,CAAC,0BAAY,QAAQ,EAAE,QAAQ,0BAAY,QAAQ,EAAE,KAAK,iBAAiB,OAAO;AAClF;AAAA,MACJ;AAEA,YAAM,QAAQ,0BAAY,QAAQ;AAElC,YAAM,UAAU,OAAG,2BAAY,QAAQ,CAAC,IAAI,QAAQ;AACpD,YAAM,qBAAoB,WAAM,SAAN,mBAAY;AACtC,UAAI,QAAQ,kBAAkB,MAAM,OAAO;AAC3C,UAAI,MAAM,OAAO,SAAS,aAAa,UAAU,SAAS;AACtD,gBAAQ;AAAA,MACZ;AACA,UAAI,MAAM,OAAO,SAAS,aAAa,UAAU,QAAQ;AACrD,gBAAQ;AAAA,MACZ;AACA,UAAI,MAAM,OAAO,SAAS,YAAY,UAAU,QAAW;AACvD,gBAAQ,OAAO,KAAK;AAAA,MACxB;AAEA,UAAI,UAAU,QAAW;AACrB,aAAK,IAAI,MAAM,kCAAkC,OAAO,SAAS,MAAM,KAAK,gBAAgB,KAAK,EAAE;AACnG,cAAM,KAAK,QAAQ,SAAS,SAAS,OAAO,IAAI;AAAA,MACpD,OAAO;AACH,aAAK,IAAI;AAAA,UACL,kCAAkC,OAAO,SAAS,MAAM,KAAK;AAAA,QACjE;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
