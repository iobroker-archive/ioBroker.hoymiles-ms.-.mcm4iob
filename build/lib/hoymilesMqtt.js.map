{
  "version": 3,
  "sources": ["../../src/lib/hoymilesMqtt.ts"],
  "sourcesContent": ["import { stateConfig, initState, initStates, filterDevId, handleOnlineStatus } from './states';\n\nimport type { MqttMessageEvent } from './mqtt-events';\n\n/**\n * HoymilesMqtt - class to handle hoymiles mqtt topics within ioBroker\n *\n */\nexport class HoymilesMqtt {\n    private adapter: ioBroker.Adapter;\n    private log: ioBroker.Log;\n\n    /**\n     * class constructor\n     *\n     * @param adapter reference to ioBroker aapter class\n     */\n    constructor(adapter: ioBroker.Adapter) {\n        this.adapter = adapter;\n        this.log = adapter.log;\n        this.log.debug(`[hoymilesMqtt] initializing`);\n    }\n\n    public async onMqttMessage(event: MqttMessageEvent): Promise<void> {\n        this.log.debug(`[hoymilesMqtt] process message ${event.topic}: ${event.payload.toString()}`);\n\n        if (!event.topic) {\n            this.log.debug(`[hoymilesMqtt] ignoring empty topic`);\n            return;\n        }\n\n        const topicDetails = event.topic.split('/');\n        if (topicDetails.length < 2) {\n            this.log.debug(`[hoymilesMqtt] ignoring invalid topic ${event.topic}`);\n            return;\n        }\n        const deviceId = topicDetails[2];\n        topicDetails[2] = '<dev_id>';\n        const topic = topicDetails.join('/');\n\n        await initStates(this.adapter, deviceId);\n        await handleOnlineStatus(this.adapter, deviceId);\n\n        for (const stateKey in stateConfig) {\n            if (!stateConfig[stateKey].mqtt || stateConfig[stateKey].mqtt.mqtt_publish !== topic) {\n                continue;\n            }\n\n            const state = stateConfig[stateKey];\n\n            const stateId = `${filterDevId(deviceId)}.${stateKey}`;\n            const mqtt_publish_func = state.mqtt?.mqtt_publish_funct;\n            let value = mqtt_publish_func(event.payload);\n            if (state.common.type === 'boolean' && value === 'false') {\n                value = false;\n            }\n            if (state.common.type === 'boolean' && value === 'true') {\n                value = true;\n            }\n            if (state.common.type === 'number' && value !== undefined) {\n                value = Number(value);\n            }\n\n            if (value !== undefined) {\n                this.log.debug(`[hoymilesMqtt] updateing state ${stateId} from ${event.topic} using value ${value}`);\n                await initState(this.adapter, stateId);\n                await this.adapter.setState(stateId, value, true);\n            } else {\n                this.log.debug(\n                    `[hoymilesMqtt] updateing state ${stateId} from ${event.topic} failed, value is undefined`,\n                );\n            }\n        }\n    }\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAoF;AAQ7E,MAAM,aAAa;AAAA,EACd;AAAA,EACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAOR,YAAY,SAA2B;AACnC,SAAK,UAAU;AACf,SAAK,MAAM,QAAQ;AACnB,SAAK,IAAI,MAAM,6BAA6B;AAAA,EAChD;AAAA,EAEA,MAAa,cAAc,OAAwC;AAvBvE;AAwBQ,SAAK,IAAI,MAAM,kCAAkC,MAAM,KAAK,KAAK,MAAM,QAAQ,SAAS,CAAC,EAAE;AAE3F,QAAI,CAAC,MAAM,OAAO;AACd,WAAK,IAAI,MAAM,qCAAqC;AACpD;AAAA,IACJ;AAEA,UAAM,eAAe,MAAM,MAAM,MAAM,GAAG;AAC1C,QAAI,aAAa,SAAS,GAAG;AACzB,WAAK,IAAI,MAAM,yCAAyC,MAAM,KAAK,EAAE;AACrE;AAAA,IACJ;AACA,UAAM,WAAW,aAAa,CAAC;AAC/B,iBAAa,CAAC,IAAI;AAClB,UAAM,QAAQ,aAAa,KAAK,GAAG;AAEnC,cAAM,0BAAW,KAAK,SAAS,QAAQ;AACvC,cAAM,kCAAmB,KAAK,SAAS,QAAQ;AAE/C,eAAW,YAAY,2BAAa;AAChC,UAAI,CAAC,0BAAY,QAAQ,EAAE,QAAQ,0BAAY,QAAQ,EAAE,KAAK,iBAAiB,OAAO;AAClF;AAAA,MACJ;AAEA,YAAM,QAAQ,0BAAY,QAAQ;AAElC,YAAM,UAAU,OAAG,2BAAY,QAAQ,CAAC,IAAI,QAAQ;AACpD,YAAM,qBAAoB,WAAM,SAAN,mBAAY;AACtC,UAAI,QAAQ,kBAAkB,MAAM,OAAO;AAC3C,UAAI,MAAM,OAAO,SAAS,aAAa,UAAU,SAAS;AACtD,gBAAQ;AAAA,MACZ;AACA,UAAI,MAAM,OAAO,SAAS,aAAa,UAAU,QAAQ;AACrD,gBAAQ;AAAA,MACZ;AACA,UAAI,MAAM,OAAO,SAAS,YAAY,UAAU,QAAW;AACvD,gBAAQ,OAAO,KAAK;AAAA,MACxB;AAEA,UAAI,UAAU,QAAW;AACrB,aAAK,IAAI,MAAM,kCAAkC,OAAO,SAAS,MAAM,KAAK,gBAAgB,KAAK,EAAE;AACnG,kBAAM,yBAAU,KAAK,SAAS,OAAO;AACrC,cAAM,KAAK,QAAQ,SAAS,SAAS,OAAO,IAAI;AAAA,MACpD,OAAO;AACH,aAAK,IAAI;AAAA,UACL,kCAAkC,OAAO,SAAS,MAAM,KAAK;AAAA,QACjE;AAAA,MACJ;AAAA,IACJ;AAAA,EACJ;AACJ;",
  "names": []
}
